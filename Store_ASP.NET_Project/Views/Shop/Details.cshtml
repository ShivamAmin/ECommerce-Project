@model Store_ASP.NET_Project.Models.Product

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Product</h4>
    <hr />
    <div style="float:left">
        <img src="@Html.DisplayFor(modelItem => Model.Image)" alt="Product Image" style="max-height:150px" />
    </div>
    <div>
        <dl class="dl-horizontal">

            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Price)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Price)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Stock)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Stock)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Category)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Category)
            </dd>

        </dl>
    </div>

</div>
<p>
    @Html.ActionLink("Add to Cart", "Add", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<div>
    <h2>Reviews</h2>
    Star Rating: @ViewData["AvgStars"]<br />

    @if (Session["userID"] != null)
    {
        using (Html.BeginForm())
        {
            <input type="hidden" name="id" value="@((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Id)" />
            <input type="hidden" name="productId" value="@Model.Id" />
            Rating:
            <select name="starsInput">
                <option value="0" @((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Stars == 0 ) {selected}>0</option>
                <option value="1" @((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Stars == 1 ) {selected}>1</option>
                <option value="2" @((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Stars == 2 ) {selected}>2</option>
                <option value="3" @((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Stars == 3 ) {selected}>3</option>
                <option value="4" @((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Stars == 4 ) {selected}>4</option>
                <option value="5" @((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Stars == 5 ) {selected}>5</option>
            </select><br />
            Subject: <input type="text" name="subjectInput" value="@((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Subject)" />
            <br />
            Comment: <textarea name="commentInput">@((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Comment)</textarea>
            <br />
            <input type="submit" id="submit" value="@((ViewData["UserReview"] as Store_ASP.NET_Project.Models.Review).Id == -1 ? "ADD" : "EDIT")" />
        }
    }

    @if ((ViewData["Reviews"] as List<Store_ASP.NET_Project.Models.Review>).Count > 0)
    {
        foreach (var review in ViewData["Reviews"] as List<Store_ASP.NET_Project.Models.Review>)
        {
            <p>
                --------------------------------------------------------------------------------------
            </p>
            <div>
                User: @review.UserName<br />
                Rating: @review.Stars<br />
                Subject: @review.Subject<br />
                Comment:
                <p style="width: 250px">
                    @review.Comment
                </p>
            </div>
        }
        <p>
            --------------------------------------------------------------------------------------
        </p>
    }
    else
    {
        <br />
        <p>
            No reviews yet.
        </p>
    }
    </multiplemodelviewdata.models.departments>

</div>
